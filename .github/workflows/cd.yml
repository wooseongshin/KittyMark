name: KittyMark CD
on:
  push:
    branches: ["dev"]

jobs:
  ci-cd:
    name: ci-cd 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Set up Node
      uses: actions/setup-node@v2
      with: 
        node-version: 16

    - name: Build React App
      working-directory: ./client
      env: 
        CI: ""
        FRONTEND_SECRET: ${{ secrets.REACT_APP_SECRETS }}
      run: |
        echo "$FRONTEND_SECRET" > .env
        cat .env
        npm ci
        npm run build 
        
    - name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: wooseongshin
        password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
        
    - name: Docker-compose Build and Push
      working-directory: ./environment
      env:
        CI: ""
        SERVER_SECRET: ${{ secrets.API_SERVER_SECRETS }}
      run: |
        echo "$SERVER_SECRET" > ../server/.env
        docker-compose -f docker-compose-build.yml build
        docker-compose -f docker-compose-build.yml push

    - name: Copy Docker Compose into the Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        password: ${{ secrets.DEPLOYMENT_PASSWORD }}
        port: 22
        source: "environment/docker-compose.yml,environment/default.conf"
        target: "kittymark"
        strip_components: 1
        
    - name: Run Docker Compose on the Server
      uses: appleboy/ssh-action@master
      env: 
        TOKEN: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        password: ${{ secrets.DEPLOYMENT_PASSWORD }}
        envs: TOKEN
        script: |
          docker login https://ghcr.io -u wooseongshin -p "$TOKEN"
          cd kittymark
          docker-compose pull
          docker-compose up -d
